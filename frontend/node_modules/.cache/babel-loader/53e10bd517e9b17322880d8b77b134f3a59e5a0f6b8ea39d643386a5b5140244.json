{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isuru\\\\Documents\\\\SLIIT\\\\y3paf\\\\skill-bridge\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from react-router-dom\nimport CreatePost from \"../components/CreatePost\"; // Import CreatePost component\nimport Post from \"../components/Post\"; // Import Post component\nimport axiosInstance from \"../utils/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const fetchUserData = async () => {\n    try {\n      const userData = localStorage.getItem(\"user\");\n      if (!userData) {\n        navigate(\"/login\");\n        return;\n      }\n      const user = JSON.parse(userData);\n      setUser(user);\n    } catch (error) {\n      console.error(\"Error fetching user data:\", error);\n      localStorage.removeItem(\"user\");\n      navigate(\"/login\");\n    }\n  };\n  const debugCreatePost = formData => {\n    console.group(\"Create Post Debug Info\");\n    console.log(\"User ID:\", user === null || user === void 0 ? void 0 : user.id);\n    console.log(\"Token present:\", !!localStorage.getItem(\"token\"));\n    console.log(\"Form data:\", formData);\n    console.groupEnd();\n    return {\n      userId: user === null || user === void 0 ? void 0 : user.id,\n      token: localStorage.getItem(\"token\")\n    };\n  };\n  const fetchPosts = async () => {\n    try {\n      console.log(\"Fetching posts...\");\n      const response = await axiosInstance.get(\"/api/posts\");\n      console.log(\"Posts API response:\", response.data);\n      const processedPosts = response.data.map(post => {\n        if (!post.userName || post.userName === \"Deleted User\") {\n          if (post.userFirstName || post.userLastName) {\n            post.userName = `${post.userFirstName || ''} ${post.userLastName || ''}`.trim();\n          }\n        }\n        return post;\n      });\n      setPosts(processedPosts);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n    fetchPosts();\n  }, []);\n  const handlePostCreated = newPost => {\n    console.log(\"New post created:\", newPost);\n    if (!newPost || typeof newPost !== 'object') {\n      console.error(\"Invalid post object returned:\", newPost);\n      alert(\"Failed to create post: Invalid response format\");\n      return;\n    }\n    if (!newPost.userName || newPost.userName === \"Deleted User\") {\n      const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n      if (currentUser) {\n        newPost.userName = `${currentUser.firstName || ''} ${currentUser.lastName || ''}`.trim();\n        console.log(\"Updated post with user name:\", newPost.userName);\n      }\n    }\n    if (!newPost.id) {\n      console.warn(\"Created post missing ID, generating temporary ID\");\n      newPost.id = `temp-${Date.now()}`;\n    }\n    setPosts(prevPosts => [newPost, ...prevPosts]);\n    console.log(\"Posts state updated. Total posts:\", posts.length + 1);\n    setTimeout(() => {\n      fetchPosts();\n    }, 1000);\n  };\n  const handlePostDeleted = postId => {\n    setPosts(posts.filter(post => post.id !== postId));\n  };\n  const handlePostUpdated = updatedPost => {\n    setPosts(posts.map(post => post.id === updatedPost.id ? updatedPost : post));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 text-gray-900 min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        onPostCreated: handlePostCreated,\n        debugFn: debugCreatePost,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), posts && posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        onPostDeleted: handlePostDeleted,\n        onPostUpdated: handlePostUpdated\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white text-black rounded-lg shadow-md p-8 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"No posts available. Be the first to create a post!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"MltVukrXBg452QF0Dd5G3hhSCM8=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CreatePost","Post","axiosInstance","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","loading","setLoading","user","setUser","navigate","fetchUserData","userData","localStorage","getItem","JSON","parse","error","console","removeItem","debugCreatePost","formData","group","log","id","groupEnd","userId","token","fetchPosts","response","get","data","processedPosts","map","post","userName","userFirstName","userLastName","trim","handlePostCreated","newPost","alert","currentUser","firstName","lastName","warn","Date","now","prevPosts","length","setTimeout","handlePostDeleted","postId","filter","handlePostUpdated","updatedPost","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPostCreated","debugFn","onPostDeleted","onPostUpdated","_c","$RefreshReg$"],"sources":["C:/Users/isuru/Documents/SLIIT/y3paf/skill-bridge/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from react-router-dom\r\nimport CreatePost from \"../components/CreatePost\"; // Import CreatePost component\r\nimport Post from \"../components/Post\"; // Import Post component\r\nimport axiosInstance from \"../utils/axios\";\r\n\r\nfunction Home() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const userData = localStorage.getItem(\"user\");\r\n      if (!userData) {\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n\r\n      const user = JSON.parse(userData);\r\n      setUser(user);\r\n    } catch (error) {\r\n      console.error(\"Error fetching user data:\", error);\r\n      localStorage.removeItem(\"user\");\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  const debugCreatePost = (formData) => {\r\n    console.group(\"Create Post Debug Info\");\r\n    console.log(\"User ID:\", user?.id);\r\n    console.log(\"Token present:\", !!localStorage.getItem(\"token\"));\r\n    console.log(\"Form data:\", formData);\r\n    console.groupEnd();\r\n    \r\n    return {\r\n      userId: user?.id,\r\n      token: localStorage.getItem(\"token\")\r\n    };\r\n  };\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      console.log(\"Fetching posts...\");\r\n      const response = await axiosInstance.get(\"/api/posts\");\r\n      console.log(\"Posts API response:\", response.data);\r\n\r\n      const processedPosts = response.data.map(post => {\r\n        if (!post.userName || post.userName === \"Deleted User\") {\r\n          if (post.userFirstName || post.userLastName) {\r\n            post.userName = `${post.userFirstName || ''} ${post.userLastName || ''}`.trim();\r\n          }\r\n        }\r\n        return post;\r\n      });\r\n\r\n      setPosts(processedPosts);\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handlePostCreated = (newPost) => {\r\n    console.log(\"New post created:\", newPost);\r\n\r\n    if (!newPost || typeof newPost !== 'object') {\r\n      console.error(\"Invalid post object returned:\", newPost);\r\n      alert(\"Failed to create post: Invalid response format\");\r\n      return;\r\n    }\r\n\r\n    if (!newPost.userName || newPost.userName === \"Deleted User\") {\r\n      const currentUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (currentUser) {\r\n        newPost.userName = `${currentUser.firstName || ''} ${currentUser.lastName || ''}`.trim();\r\n        console.log(\"Updated post with user name:\", newPost.userName);\r\n      }\r\n    }\r\n\r\n    if (!newPost.id) {\r\n      console.warn(\"Created post missing ID, generating temporary ID\");\r\n      newPost.id = `temp-${Date.now()}`;\r\n    }\r\n\r\n    setPosts(prevPosts => [newPost, ...prevPosts]);\r\n    console.log(\"Posts state updated. Total posts:\", posts.length + 1);\r\n\r\n    setTimeout(() => {\r\n      fetchPosts();\r\n    }, 1000);\r\n  };\r\n\r\n  const handlePostDeleted = (postId) => {\r\n    setPosts(posts.filter((post) => post.id !== postId));\r\n  };\r\n\r\n  const handlePostUpdated = (updatedPost) => {\r\n    setPosts(\r\n      posts.map((post) => (post.id === updatedPost.id ? updatedPost : post))\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 text-gray-900 min-h-screen\">\r\n      <div className=\"max-w-2xl mx-auto py-8 px-4\">\r\n        <CreatePost \r\n          onPostCreated={handlePostCreated} \r\n          debugFn={debugCreatePost}\r\n          user={user}\r\n        />\r\n        {posts && posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <Post\r\n              key={post.id}\r\n              post={post}\r\n              onPostDeleted={handlePostDeleted}\r\n              onPostUpdated={handlePostUpdated}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className=\"bg-white text-black rounded-lg shadow-md p-8 text-center\">\r\n            <p className=\"text-gray-600\">No posts available. Be the first to create a post!</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,UAAU,MAAM,0BAA0B,CAAC,CAAC;AACnD,OAAOC,IAAI,MAAM,oBAAoB,CAAC,CAAC;AACvC,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC7C,IAAI,CAACF,QAAQ,EAAE;QACbF,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;MAEA,MAAMF,IAAI,GAAGO,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;MACjCH,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDJ,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;MAC/BT,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,MAAMU,eAAe,GAAIC,QAAQ,IAAK;IACpCH,OAAO,CAACI,KAAK,CAAC,wBAAwB,CAAC;IACvCJ,OAAO,CAACK,GAAG,CAAC,UAAU,EAAEf,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEgB,EAAE,CAAC;IACjCN,OAAO,CAACK,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAACV,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC9DI,OAAO,CAACK,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;IACnCH,OAAO,CAACO,QAAQ,CAAC,CAAC;IAElB,OAAO;MACLC,MAAM,EAAElB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEgB,EAAE;MAChBG,KAAK,EAAEd,YAAY,CAACC,OAAO,CAAC,OAAO;IACrC,CAAC;EACH,CAAC;EAED,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFV,OAAO,CAACK,GAAG,CAAC,mBAAmB,CAAC;MAChC,MAAMM,QAAQ,GAAG,MAAM9B,aAAa,CAAC+B,GAAG,CAAC,YAAY,CAAC;MACtDZ,OAAO,CAACK,GAAG,CAAC,qBAAqB,EAAEM,QAAQ,CAACE,IAAI,CAAC;MAEjD,MAAMC,cAAc,GAAGH,QAAQ,CAACE,IAAI,CAACE,GAAG,CAACC,IAAI,IAAI;QAC/C,IAAI,CAACA,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACC,QAAQ,KAAK,cAAc,EAAE;UACtD,IAAID,IAAI,CAACE,aAAa,IAAIF,IAAI,CAACG,YAAY,EAAE;YAC3CH,IAAI,CAACC,QAAQ,GAAG,GAAGD,IAAI,CAACE,aAAa,IAAI,EAAE,IAAIF,IAAI,CAACG,YAAY,IAAI,EAAE,EAAE,CAACC,IAAI,CAAC,CAAC;UACjF;QACF;QACA,OAAOJ,IAAI;MACb,CAAC,CAAC;MAEF7B,QAAQ,CAAC2B,cAAc,CAAC;IAC1B,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdgB,aAAa,CAAC,CAAC;IACfiB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,iBAAiB,GAAIC,OAAO,IAAK;IACrCtB,OAAO,CAACK,GAAG,CAAC,mBAAmB,EAAEiB,OAAO,CAAC;IAEzC,IAAI,CAACA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC3CtB,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEuB,OAAO,CAAC;MACvDC,KAAK,CAAC,gDAAgD,CAAC;MACvD;IACF;IAEA,IAAI,CAACD,OAAO,CAACL,QAAQ,IAAIK,OAAO,CAACL,QAAQ,KAAK,cAAc,EAAE;MAC5D,MAAMO,WAAW,GAAG3B,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MAC5D,IAAI4B,WAAW,EAAE;QACfF,OAAO,CAACL,QAAQ,GAAG,GAAGO,WAAW,CAACC,SAAS,IAAI,EAAE,IAAID,WAAW,CAACE,QAAQ,IAAI,EAAE,EAAE,CAACN,IAAI,CAAC,CAAC;QACxFpB,OAAO,CAACK,GAAG,CAAC,8BAA8B,EAAEiB,OAAO,CAACL,QAAQ,CAAC;MAC/D;IACF;IAEA,IAAI,CAACK,OAAO,CAAChB,EAAE,EAAE;MACfN,OAAO,CAAC2B,IAAI,CAAC,kDAAkD,CAAC;MAChEL,OAAO,CAAChB,EAAE,GAAG,QAAQsB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;IACnC;IAEA1C,QAAQ,CAAC2C,SAAS,IAAI,CAACR,OAAO,EAAE,GAAGQ,SAAS,CAAC,CAAC;IAC9C9B,OAAO,CAACK,GAAG,CAAC,mCAAmC,EAAEnB,KAAK,CAAC6C,MAAM,GAAG,CAAC,CAAC;IAElEC,UAAU,CAAC,MAAM;MACftB,UAAU,CAAC,CAAC;IACd,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMuB,iBAAiB,GAAIC,MAAM,IAAK;IACpC/C,QAAQ,CAACD,KAAK,CAACiD,MAAM,CAAEnB,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAK4B,MAAM,CAAC,CAAC;EACtD,CAAC;EAED,MAAME,iBAAiB,GAAIC,WAAW,IAAK;IACzClD,QAAQ,CACND,KAAK,CAAC6B,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACV,EAAE,KAAK+B,WAAW,CAAC/B,EAAE,GAAG+B,WAAW,GAAGrB,IAAK,CACvE,CAAC;EACH,CAAC;EAED,IAAI5B,OAAO,EAAE;IACX,oBACEL,OAAA;MAAKuD,SAAS,EAAC,+CAA+C;MAAAC,QAAA,eAC5DxD,OAAA;QAAKuD,SAAS,EAAC;MAAgE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC;EAEV;EAEA,oBACE5D,OAAA;IAAKuD,SAAS,EAAC,wCAAwC;IAAAC,QAAA,eACrDxD,OAAA;MAAKuD,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBAC1CxD,OAAA,CAACJ,UAAU;QACTiE,aAAa,EAAEvB,iBAAkB;QACjCwB,OAAO,EAAE3C,eAAgB;QACzBZ,IAAI,EAAEA;MAAK;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,EACDzD,KAAK,IAAIA,KAAK,CAAC6C,MAAM,GAAG,CAAC,GACxB7C,KAAK,CAAC6B,GAAG,CAAEC,IAAI,iBACbjC,OAAA,CAACH,IAAI;QAEHoC,IAAI,EAAEA,IAAK;QACX8B,aAAa,EAAEb,iBAAkB;QACjCc,aAAa,EAAEX;MAAkB,GAH5BpB,IAAI,CAACV,EAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACF,CAAC,gBAEF5D,OAAA;QAAKuD,SAAS,EAAC,0DAA0D;QAAAC,QAAA,eACvExD,OAAA;UAAGuD,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAkD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1D,EAAA,CAzIQD,IAAI;EAAA,QAIMN,WAAW;AAAA;AAAAsE,EAAA,GAJrBhE,IAAI;AA2Ib,eAAeA,IAAI;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}