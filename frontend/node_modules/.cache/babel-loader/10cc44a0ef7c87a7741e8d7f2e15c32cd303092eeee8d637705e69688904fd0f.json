{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isuru\\\\Documents\\\\SLIIT\\\\y3paf\\\\skill-bridge\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axiosInstance from '../utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    isAuthenticated: false,\n    user: null,\n    token: null\n  });\n\n  // Initialize auth state from localStorage on app load\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      try {\n        const userData = JSON.parse(user);\n        setAuth({\n          isAuthenticated: true,\n          user: userData,\n          token: userData.token || null\n        });\n\n        // Set the default authorization header for axios\n        if (userData.token) {\n          axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\n        }\n      } catch (error) {\n        console.error('Error parsing user data from localStorage:', error);\n        localStorage.removeItem('user');\n      }\n    }\n  }, []);\n\n  // Update auth state handler\n  const updateAuth = authData => {\n    var _authData$user;\n    setAuth(authData);\n\n    // Update axios default headers when auth changes\n    if (authData.isAuthenticated && (_authData$user = authData.user) !== null && _authData$user !== void 0 && _authData$user.token) {\n      axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${authData.user.token}`;\n    } else {\n      delete axiosInstance.defaults.headers.common['Authorization'];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...auth,\n      setAuth: updateAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lqFefJAmMveh4ZdibrizooKaAOY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","isAuthenticated","user","token","localStorage","getItem","userData","JSON","parse","defaults","headers","common","error","console","removeItem","updateAuth","authData","_authData$user","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/isuru/Documents/SLIIT/y3paf/skill-bridge/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axiosInstance from '../utils/axios';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [auth, setAuth] = useState({\r\n    isAuthenticated: false,\r\n    user: null,\r\n    token: null\r\n  });\r\n\r\n  // Initialize auth state from localStorage on app load\r\n  useEffect(() => {\r\n    const user = localStorage.getItem('user');\r\n    if (user) {\r\n      try {\r\n        const userData = JSON.parse(user);\r\n        setAuth({\r\n          isAuthenticated: true,\r\n          user: userData,\r\n          token: userData.token || null\r\n        });\r\n        \r\n        // Set the default authorization header for axios\r\n        if (userData.token) {\r\n          axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${userData.token}`;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing user data from localStorage:', error);\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Update auth state handler\r\n  const updateAuth = (authData) => {\r\n    setAuth(authData);\r\n    \r\n    // Update axios default headers when auth changes\r\n    if (authData.isAuthenticated && authData.user?.token) {\r\n      axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${authData.user.token}`;\r\n    } else {\r\n      delete axiosInstance.defaults.headers.common['Authorization'];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ ...auth, setAuth: updateAuth }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,eAAe,EAAE,KAAK;IACtBC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;EACAZ,SAAS,CAAC,MAAM;IACd,MAAMW,IAAI,GAAGE,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIH,IAAI,EAAE;MACR,IAAI;QACF,MAAMI,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC;QACjCF,OAAO,CAAC;UACNC,eAAe,EAAE,IAAI;UACrBC,IAAI,EAAEI,QAAQ;UACdH,KAAK,EAAEG,QAAQ,CAACH,KAAK,IAAI;QAC3B,CAAC,CAAC;;QAEF;QACA,IAAIG,QAAQ,CAACH,KAAK,EAAE;UAClBX,aAAa,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,QAAQ,CAACH,KAAK,EAAE;QACrF;MACF,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;QAClER,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,UAAU,GAAIC,QAAQ,IAAK;IAAA,IAAAC,cAAA;IAC/BjB,OAAO,CAACgB,QAAQ,CAAC;;IAEjB;IACA,IAAIA,QAAQ,CAACf,eAAe,KAAAgB,cAAA,GAAID,QAAQ,CAACd,IAAI,cAAAe,cAAA,eAAbA,cAAA,CAAed,KAAK,EAAE;MACpDX,aAAa,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUK,QAAQ,CAACd,IAAI,CAACC,KAAK,EAAE;IAC1F,CAAC,MAAM;MACL,OAAOX,aAAa,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IAC/D;EACF,CAAC;EAED,oBACEjB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGpB,IAAI;MAAEC,OAAO,EAAEe;IAAW,CAAE;IAAAlB,QAAA,EAC3DA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CA/CWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}