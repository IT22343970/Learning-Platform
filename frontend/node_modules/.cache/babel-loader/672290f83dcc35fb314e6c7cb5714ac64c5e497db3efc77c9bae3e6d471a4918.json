{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import CreatePost from\"../components/CreatePost\";import Post from\"../components/Post\";import Header from\"../components/Header\";import axiosInstance from\"../utils/axios\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){const[posts,setPosts]=useState([]);const[loading,setLoading]=useState(true);const[user,setUser]=useState(null);const navigate=useNavigate();const fetchUserData=async()=>{try{// Check for stored user data instead of just the token\nconst userData=localStorage.getItem(\"user\");if(!userData){navigate(\"/login\");return;}const user=JSON.parse(userData);setUser(user);// Optionally validate token on backend or refresh user data\n// const response = await axiosInstance.get(\"/api/users/me\");\n// setUser(response.data);\n}catch(error){console.error(\"Error fetching user data:\",error);localStorage.removeItem(\"user\");navigate(\"/login\");}};// Add debug function to inspect CreatePost issues\nconst debugCreatePost=formData=>{console.group(\"Create Post Debug Info\");console.log(\"User ID:\",user===null||user===void 0?void 0:user.id);console.log(\"Token present:\",!!localStorage.getItem(\"token\"));console.log(\"Form data:\",formData);console.groupEnd();// Return user information for post creation\nreturn{userId:user===null||user===void 0?void 0:user.id,token:localStorage.getItem(\"token\")};};const fetchPosts=async()=>{try{console.log(\"Fetching posts...\");const response=await axiosInstance.get(\"/api/posts\");console.log(\"Posts API response:\",response.data);// Process posts to ensure user information is correctly displayed\nconst processedPosts=response.data.map(post=>{// If the post doesn't have userName or has \"Deleted User\" as userName,\n// try to derive the name from userFirstName and userLastName fields\nif(!post.userName||post.userName===\"Deleted User\"){if(post.userFirstName||post.userLastName){post.userName=`${post.userFirstName||''} ${post.userLastName||''}`.trim();}}return post;});setPosts(processedPosts);}catch(error){console.error(\"Error fetching posts:\",error);if(error.response){console.error(\"Response status:\",error.response.status);console.error(\"Response data:\",error.response.data);}}finally{setLoading(false);}};useEffect(()=>{fetchUserData();fetchPosts();},[]);const handlePostCreated=newPost=>{console.log(\"New post created:\",newPost);if(!newPost||typeof newPost!=='object'){console.error(\"Invalid post object returned:\",newPost);alert(\"Failed to create post: Invalid response format\");return;}// Ensure the new post has correct user information\nif(!newPost.userName||newPost.userName===\"Deleted User\"){const currentUser=JSON.parse(localStorage.getItem(\"user\"));if(currentUser){newPost.userName=`${currentUser.firstName||''} ${currentUser.lastName||''}`.trim();console.log(\"Updated post with user name:\",newPost.userName);}}// Ensure post has an id before adding to state\nif(!newPost.id){console.warn(\"Created post missing ID, generating temporary ID\");newPost.id=`temp-${Date.now()}`;}setPosts(prevPosts=>[newPost,...prevPosts]);console.log(\"Posts state updated. Total posts:\",posts.length+1);// Refresh posts from server to ensure consistency\nsetTimeout(()=>{fetchPosts();},1000);};const handlePostDeleted=postId=>{setPosts(posts.filter(post=>post.id!==postId));};const handlePostUpdated=updatedPost=>{setPosts(posts.map(post=>post.id===updatedPost.id?updatedPost:post));};if(loading){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center min-h-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"})})});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-2xl mx-auto py-8 px-4\",children:[/*#__PURE__*/_jsx(CreatePost,{onPostCreated:handlePostCreated,debugFn:debugCreatePost,user:user}),posts&&posts.length>0?posts.map(post=>/*#__PURE__*/_jsx(Post,{post:post,onPostDeleted:handlePostDeleted,onPostUpdated:handlePostUpdated},post.id)):/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-md p-8 text-center\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"No posts available. Be the first to create a post!\"})})]})});}export default Home;","map":{"version":3,"names":["React","useState","useEffect","CreatePost","Post","Header","axiosInstance","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Home","posts","setPosts","loading","setLoading","user","setUser","navigate","fetchUserData","userData","localStorage","getItem","JSON","parse","error","console","removeItem","debugCreatePost","formData","group","log","id","groupEnd","userId","token","fetchPosts","response","get","data","processedPosts","map","post","userName","userFirstName","userLastName","trim","status","handlePostCreated","newPost","alert","currentUser","firstName","lastName","warn","Date","now","prevPosts","length","setTimeout","handlePostDeleted","postId","filter","handlePostUpdated","updatedPost","children","className","onPostCreated","debugFn","onPostDeleted","onPostUpdated"],"sources":["C:/Users/isuru/Documents/SLIIT/y3paf/skill-bridge/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CreatePost from \"../components/CreatePost\";\r\nimport Post from \"../components/Post\";\r\nimport Header from \"../components/Header\";\r\nimport axiosInstance from \"../utils/axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      // Check for stored user data instead of just the token\r\n      const userData = localStorage.getItem(\"user\");\r\n      if (!userData) {\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n\r\n      const user = JSON.parse(userData);\r\n      setUser(user);\r\n      \r\n      // Optionally validate token on backend or refresh user data\r\n      // const response = await axiosInstance.get(\"/api/users/me\");\r\n      // setUser(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching user data:\", error);\r\n      localStorage.removeItem(\"user\");\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  // Add debug function to inspect CreatePost issues\r\n  const debugCreatePost = (formData) => {\r\n    console.group(\"Create Post Debug Info\");\r\n    console.log(\"User ID:\", user?.id);\r\n    console.log(\"Token present:\", !!localStorage.getItem(\"token\"));\r\n    console.log(\"Form data:\", formData);\r\n    console.groupEnd();\r\n    \r\n    // Return user information for post creation\r\n    return {\r\n      userId: user?.id,\r\n      token: localStorage.getItem(\"token\")\r\n    };\r\n  };\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      console.log(\"Fetching posts...\");\r\n      const response = await axiosInstance.get(\"/api/posts\");\r\n      console.log(\"Posts API response:\", response.data);\r\n      \r\n      // Process posts to ensure user information is correctly displayed\r\n      const processedPosts = response.data.map(post => {\r\n        // If the post doesn't have userName or has \"Deleted User\" as userName,\r\n        // try to derive the name from userFirstName and userLastName fields\r\n        if (!post.userName || post.userName === \"Deleted User\") {\r\n          if (post.userFirstName || post.userLastName) {\r\n            post.userName = `${post.userFirstName || ''} ${post.userLastName || ''}`.trim();\r\n          }\r\n        }\r\n        return post;\r\n      });\r\n      \r\n      setPosts(processedPosts);\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts:\", error);\r\n      if (error.response) {\r\n        console.error(\"Response status:\", error.response.status);\r\n        console.error(\"Response data:\", error.response.data);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handlePostCreated = (newPost) => {\r\n    console.log(\"New post created:\", newPost);\r\n    \r\n    if (!newPost || typeof newPost !== 'object') {\r\n      console.error(\"Invalid post object returned:\", newPost);\r\n      alert(\"Failed to create post: Invalid response format\");\r\n      return;\r\n    }\r\n    \r\n    // Ensure the new post has correct user information\r\n    if (!newPost.userName || newPost.userName === \"Deleted User\") {\r\n      const currentUser = JSON.parse(localStorage.getItem(\"user\"));\r\n      if (currentUser) {\r\n        newPost.userName = `${currentUser.firstName || ''} ${currentUser.lastName || ''}`.trim();\r\n        console.log(\"Updated post with user name:\", newPost.userName);\r\n      }\r\n    }\r\n    \r\n    // Ensure post has an id before adding to state\r\n    if (!newPost.id) {\r\n      console.warn(\"Created post missing ID, generating temporary ID\");\r\n      newPost.id = `temp-${Date.now()}`;\r\n    }\r\n    \r\n    setPosts(prevPosts => [newPost, ...prevPosts]);\r\n    console.log(\"Posts state updated. Total posts:\", posts.length + 1);\r\n    \r\n    // Refresh posts from server to ensure consistency\r\n    setTimeout(() => {\r\n      fetchPosts();\r\n    }, 1000);\r\n  };\r\n\r\n  const handlePostDeleted = (postId) => {\r\n    setPosts(posts.filter((post) => post.id !== postId));\r\n  };\r\n\r\n  const handlePostUpdated = (updatedPost) => {\r\n    setPosts(\r\n      posts.map((post) => (post.id === updatedPost.id ? updatedPost : post))\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        \r\n        <div className=\"flex justify-center items-center min-h-screen\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n     \r\n      <div className=\"max-w-2xl mx-auto py-8 px-4\">\r\n        <CreatePost \r\n          onPostCreated={handlePostCreated} \r\n          debugFn={debugCreatePost}\r\n          user={user}\r\n        />\r\n        {posts && posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <Post\r\n              key={post.id}\r\n              post={post}\r\n              onPostDeleted={handlePostDeleted}\r\n              onPostUpdated={handlePostUpdated}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\r\n            <p className=\"text-gray-600\">No posts available. Be the first to create a post!</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,aAAa,KAAM,gBAAgB,CAC1C,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACkB,IAAI,CAAEC,OAAO,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAAAoB,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAe,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC7C,GAAI,CAACF,QAAQ,CAAE,CACbF,QAAQ,CAAC,QAAQ,CAAC,CAClB,OACF,CAEA,KAAM,CAAAF,IAAI,CAAGO,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CACjCH,OAAO,CAACD,IAAI,CAAC,CAEb;AACA;AACA;AACF,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjDJ,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC,CAC/BT,QAAQ,CAAC,QAAQ,CAAC,CACpB,CACF,CAAC,CAED;AACA,KAAM,CAAAU,eAAe,CAAIC,QAAQ,EAAK,CACpCH,OAAO,CAACI,KAAK,CAAC,wBAAwB,CAAC,CACvCJ,OAAO,CAACK,GAAG,CAAC,UAAU,CAAEf,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEgB,EAAE,CAAC,CACjCN,OAAO,CAACK,GAAG,CAAC,gBAAgB,CAAE,CAAC,CAACV,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAC9DI,OAAO,CAACK,GAAG,CAAC,YAAY,CAAEF,QAAQ,CAAC,CACnCH,OAAO,CAACO,QAAQ,CAAC,CAAC,CAElB;AACA,MAAO,CACLC,MAAM,CAAElB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEgB,EAAE,CAChBG,KAAK,CAAEd,YAAY,CAACC,OAAO,CAAC,OAAO,CACrC,CAAC,CACH,CAAC,CAED,KAAM,CAAAc,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACFV,OAAO,CAACK,GAAG,CAAC,mBAAmB,CAAC,CAChC,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAlC,aAAa,CAACmC,GAAG,CAAC,YAAY,CAAC,CACtDZ,OAAO,CAACK,GAAG,CAAC,qBAAqB,CAAEM,QAAQ,CAACE,IAAI,CAAC,CAEjD;AACA,KAAM,CAAAC,cAAc,CAAGH,QAAQ,CAACE,IAAI,CAACE,GAAG,CAACC,IAAI,EAAI,CAC/C;AACA;AACA,GAAI,CAACA,IAAI,CAACC,QAAQ,EAAID,IAAI,CAACC,QAAQ,GAAK,cAAc,CAAE,CACtD,GAAID,IAAI,CAACE,aAAa,EAAIF,IAAI,CAACG,YAAY,CAAE,CAC3CH,IAAI,CAACC,QAAQ,CAAG,GAAGD,IAAI,CAACE,aAAa,EAAI,EAAE,IAAIF,IAAI,CAACG,YAAY,EAAI,EAAE,EAAE,CAACC,IAAI,CAAC,CAAC,CACjF,CACF,CACA,MAAO,CAAAJ,IAAI,CACb,CAAC,CAAC,CAEF7B,QAAQ,CAAC2B,cAAc,CAAC,CAC1B,CAAE,MAAOf,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,GAAIA,KAAK,CAACY,QAAQ,CAAE,CAClBX,OAAO,CAACD,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAACY,QAAQ,CAACU,MAAM,CAAC,CACxDrB,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAACY,QAAQ,CAACE,IAAI,CAAC,CACtD,CACF,CAAC,OAAS,CACRxB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDhB,SAAS,CAAC,IAAM,CACdoB,aAAa,CAAC,CAAC,CACfiB,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAY,iBAAiB,CAAIC,OAAO,EAAK,CACrCvB,OAAO,CAACK,GAAG,CAAC,mBAAmB,CAAEkB,OAAO,CAAC,CAEzC,GAAI,CAACA,OAAO,EAAI,MAAO,CAAAA,OAAO,GAAK,QAAQ,CAAE,CAC3CvB,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEwB,OAAO,CAAC,CACvDC,KAAK,CAAC,gDAAgD,CAAC,CACvD,OACF,CAEA;AACA,GAAI,CAACD,OAAO,CAACN,QAAQ,EAAIM,OAAO,CAACN,QAAQ,GAAK,cAAc,CAAE,CAC5D,KAAM,CAAAQ,WAAW,CAAG5B,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAC5D,GAAI6B,WAAW,CAAE,CACfF,OAAO,CAACN,QAAQ,CAAG,GAAGQ,WAAW,CAACC,SAAS,EAAI,EAAE,IAAID,WAAW,CAACE,QAAQ,EAAI,EAAE,EAAE,CAACP,IAAI,CAAC,CAAC,CACxFpB,OAAO,CAACK,GAAG,CAAC,8BAA8B,CAAEkB,OAAO,CAACN,QAAQ,CAAC,CAC/D,CACF,CAEA;AACA,GAAI,CAACM,OAAO,CAACjB,EAAE,CAAE,CACfN,OAAO,CAAC4B,IAAI,CAAC,kDAAkD,CAAC,CAChEL,OAAO,CAACjB,EAAE,CAAG,QAAQuB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CACnC,CAEA3C,QAAQ,CAAC4C,SAAS,EAAI,CAACR,OAAO,CAAE,GAAGQ,SAAS,CAAC,CAAC,CAC9C/B,OAAO,CAACK,GAAG,CAAC,mCAAmC,CAAEnB,KAAK,CAAC8C,MAAM,CAAG,CAAC,CAAC,CAElE;AACAC,UAAU,CAAC,IAAM,CACfvB,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAwB,iBAAiB,CAAIC,MAAM,EAAK,CACpChD,QAAQ,CAACD,KAAK,CAACkD,MAAM,CAAEpB,IAAI,EAAKA,IAAI,CAACV,EAAE,GAAK6B,MAAM,CAAC,CAAC,CACtD,CAAC,CAED,KAAM,CAAAE,iBAAiB,CAAIC,WAAW,EAAK,CACzCnD,QAAQ,CACND,KAAK,CAAC6B,GAAG,CAAEC,IAAI,EAAMA,IAAI,CAACV,EAAE,GAAKgC,WAAW,CAAChC,EAAE,CAAGgC,WAAW,CAAGtB,IAAK,CACvE,CAAC,CACH,CAAC,CAED,GAAI5B,OAAO,CAAE,CACX,mBACER,IAAA,CAAAE,SAAA,EAAAyD,QAAA,cAEE3D,IAAA,QAAK4D,SAAS,CAAC,+CAA+C,CAAAD,QAAA,cAC5D3D,IAAA,QAAK4D,SAAS,CAAC,gEAAgE,CAAM,CAAC,CACnF,CAAC,CACN,CAAC,CAEP,CAEA,mBACE5D,IAAA,CAAAE,SAAA,EAAAyD,QAAA,cAEEvD,KAAA,QAAKwD,SAAS,CAAC,6BAA6B,CAAAD,QAAA,eAC1C3D,IAAA,CAACN,UAAU,EACTmE,aAAa,CAAEnB,iBAAkB,CACjCoB,OAAO,CAAExC,eAAgB,CACzBZ,IAAI,CAAEA,IAAK,CACZ,CAAC,CACDJ,KAAK,EAAIA,KAAK,CAAC8C,MAAM,CAAG,CAAC,CACxB9C,KAAK,CAAC6B,GAAG,CAAEC,IAAI,eACbpC,IAAA,CAACL,IAAI,EAEHyC,IAAI,CAAEA,IAAK,CACX2B,aAAa,CAAET,iBAAkB,CACjCU,aAAa,CAAEP,iBAAkB,EAH5BrB,IAAI,CAACV,EAIX,CACF,CAAC,cAEF1B,IAAA,QAAK4D,SAAS,CAAC,+CAA+C,CAAAD,QAAA,cAC5D3D,IAAA,MAAG4D,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,oDAAkD,CAAG,CAAC,CAChF,CACN,EACE,CAAC,CACN,CAAC,CAEP,CAEA,cAAe,CAAAtD,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}