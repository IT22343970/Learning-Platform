{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isuru\\\\Documents\\\\SLIIT\\\\y3paf\\\\skill-bridge\\\\frontend\\\\src\\\\components\\\\ReactionButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../utils/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReactionButton({\n  postId,\n  userId,\n  onReactionChange,\n  renderButton\n}) {\n  _s();\n  const [liked, setLiked] = useState(false);\n  const [count, setCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const checkReactionStatus = async () => {\n      try {\n        const response = await axiosInstance.get(`/api/reactions/status?postId=${postId}&userId=${userId}`);\n        setLiked(response.data.liked);\n        setCount(response.data.count);\n      } catch (error) {\n        console.error(\"Error checking reaction status:\", error);\n      }\n    };\n    if (postId && userId) {\n      checkReactionStatus();\n    }\n  }, [postId, userId]);\n  const handleReaction = async () => {\n    if (loading) return;\n    try {\n      setLoading(true);\n      // Optimistic UI update\n      setLiked(!liked);\n      setCount(liked ? count - 1 : count + 1);\n      const response = await axiosInstance.post(\"/api/reactions/toggle\", null, {\n        params: {\n          userId,\n          postId\n        }\n      });\n\n      // Update with actual values from server\n      setLiked(response.data.liked);\n      setCount(response.data.count);\n      if (onReactionChange) {\n        onReactionChange(response.data);\n      }\n    } catch (error) {\n      // Revert to previous state on error\n      setLiked(!liked);\n      setCount(liked ? count + 1 : count - 1);\n      console.error(\"Error toggling reaction:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // If a custom render function is provided, use it\n  if (renderButton) {\n    return renderButton({\n      liked,\n      count,\n      onClick: handleReaction,\n      loading\n    });\n  }\n\n  // Default button render\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleReaction,\n    disabled: loading,\n    className: `flex items-center space-x-2 ${liked ? \"text-blue-600\" : \"text-gray-500 hover:text-blue-500\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"w-6 h-6\",\n      fill: liked ? \"currentColor\" : \"none\",\n      stroke: \"currentColor\",\n      viewBox: \"0 0 24 24\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"2\",\n        d: \"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(ReactionButton, \"HqZkCULWY1wbBG08FHrBSqZz/7U=\");\n_c = ReactionButton;\nexport default ReactionButton;\nvar _c;\n$RefreshReg$(_c, \"ReactionButton\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","ReactionButton","postId","userId","onReactionChange","renderButton","_s","liked","setLiked","count","setCount","loading","setLoading","checkReactionStatus","response","get","data","error","console","handleReaction","post","params","onClick","disabled","className","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/isuru/Documents/SLIIT/y3paf/skill-bridge/frontend/src/components/ReactionButton.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../utils/axios\";\r\n\r\nfunction ReactionButton({ postId, userId, onReactionChange, renderButton }) {\r\n  const [liked, setLiked] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkReactionStatus = async () => {\r\n      try {\r\n        const response = await axiosInstance.get(`/api/reactions/status?postId=${postId}&userId=${userId}`);\r\n        setLiked(response.data.liked);\r\n        setCount(response.data.count);\r\n      } catch (error) {\r\n        console.error(\"Error checking reaction status:\", error);\r\n      }\r\n    };\r\n\r\n    if (postId && userId) {\r\n      checkReactionStatus();\r\n    }\r\n  }, [postId, userId]);\r\n\r\n  const handleReaction = async () => {\r\n    if (loading) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      // Optimistic UI update\r\n      setLiked(!liked);\r\n      setCount(liked ? count - 1 : count + 1);\r\n\r\n      const response = await axiosInstance.post(\"/api/reactions/toggle\", null, {\r\n        params: { userId, postId }\r\n      });\r\n\r\n      // Update with actual values from server\r\n      setLiked(response.data.liked);\r\n      setCount(response.data.count);\r\n      \r\n      if (onReactionChange) {\r\n        onReactionChange(response.data);\r\n      }\r\n    } catch (error) {\r\n      // Revert to previous state on error\r\n      setLiked(!liked);\r\n      setCount(liked ? count + 1 : count - 1);\r\n      console.error(\"Error toggling reaction:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // If a custom render function is provided, use it\r\n  if (renderButton) {\r\n    return renderButton({\r\n      liked,\r\n      count,\r\n      onClick: handleReaction,\r\n      loading\r\n    });\r\n  }\r\n\r\n  // Default button render\r\n  return (\r\n    <button\r\n      onClick={handleReaction}\r\n      disabled={loading}\r\n      className={`flex items-center space-x-2 ${liked ? \"text-blue-600\" : \"text-gray-500 hover:text-blue-500\"}`}\r\n    >\r\n      <svg\r\n        className=\"w-6 h-6\"\r\n        fill={liked ? \"currentColor\" : \"none\"}\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\"\r\n        />\r\n      </svg>\r\n      <span>{count}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ReactionButton;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}