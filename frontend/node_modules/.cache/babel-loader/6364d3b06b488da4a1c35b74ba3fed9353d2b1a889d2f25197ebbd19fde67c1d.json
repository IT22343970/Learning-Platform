{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isuru\\\\Documents\\\\SLIIT\\\\y3paf\\\\skill-bridge\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axiosInstance from \"../utils/axios\";\nimport Header from \"../components/Header\";\nimport AdminSidebar from \"../components/AdminSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [stats, setStats] = useState({\n    totalUsers: 0,\n    totalPosts: 0,\n    newUsersToday: 0,\n    activeUsers: 0\n  });\n  const [reportStats, setReportStats] = useState({\n    total: 0,\n    pending: 0,\n    resolved: 0,\n    rejected: 0\n  });\n  const [recentUsers, setRecentUsers] = useState([]);\n  const [recentPosts, setRecentPosts] = useState([]);\n  const [recentReports, setRecentReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [userChartData, setUserChartData] = useState({\n    labels: [],\n    values: [],\n    maxValue: 10\n  });\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const navigate = useNavigate();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const checkAdminAccess = async () => {\n      try {\n        const userData = localStorage.getItem(\"user\");\n        if (!userData) {\n          navigate(\"/login\");\n          return;\n        }\n        const user = JSON.parse(userData);\n        if (user.role !== \"ROLE_ADMIN\") {\n          navigate(\"/\");\n          return;\n        }\n        setUser(user);\n        await fetchDashboardData();\n      } catch (error) {\n        console.error(\"Error checking admin access:\", error);\n        navigate(\"/\");\n      }\n    };\n    checkAdminAccess();\n  }, [navigate]);\n  const fetchDashboardData = async () => {\n    try {\n      let userStats = {\n        total: 0,\n        newToday: 0,\n        active: 0\n      };\n      let postStats = {\n        total: 0,\n        todayTotal: 0\n      };\n      let recentUsersData = [];\n      let recentPostsData = [];\n\n      // Fetch user stats\n      try {\n        const usersRes = await axiosInstance.get(\"/api/admin/stats/users\");\n        if (typeof usersRes.data === 'object') {\n          userStats = {\n            total: usersRes.data.total || 0,\n            newToday: usersRes.data.newToday || 0,\n            active: usersRes.data.active || 0\n          };\n        }\n      } catch (statsError) {\n        console.error(\"Error fetching user stats:\", statsError);\n        // Fallback logic remains unchanged\n      }\n\n      // Remaining stats fetching logic...\n      try {\n        const postsRes = await axiosInstance.get(\"/api/admin/stats/posts\");\n        if (typeof postsRes.data === 'object') {\n          postStats.total = postsRes.data.total || 0;\n        }\n        const todayPostsRes = await axiosInstance.get(\"/api/admin/stats/posts/today\");\n        if (typeof todayPostsRes.data === 'object' && todayPostsRes.data.count !== undefined) {\n          postStats.todayTotal = todayPostsRes.data.count;\n        } else if (typeof todayPostsRes.data === 'number') {\n          postStats.todayTotal = todayPostsRes.data;\n        } else if (Array.isArray(todayPostsRes.data)) {\n          postStats.todayTotal = todayPostsRes.data.length;\n        }\n      } catch (postError) {\n        try {\n          const allPostsRes = await axiosInstance.get(\"/api/admin/posts\");\n          if (Array.isArray(allPostsRes.data)) {\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            const todayPosts = allPostsRes.data.filter(post => {\n              const postDate = new Date(post.createdAt);\n              return postDate >= today;\n            });\n            postStats.todayTotal = todayPosts.length;\n          }\n        } catch (err) {}\n      }\n\n      // Fetch report stats\n      try {\n        const reportStatsRes = await axiosInstance.get(\"/api/reports/stats\");\n        if (typeof reportStatsRes.data === 'object') {\n          setReportStats({\n            total: reportStatsRes.data.total || 0,\n            pending: reportStatsRes.data.pending || 0,\n            resolved: reportStatsRes.data.resolved || 0,\n            rejected: reportStatsRes.data.rejected || 0\n          });\n        }\n      } catch (reportError) {\n        console.error(\"Error fetching report stats:\", reportError);\n        setReportStats({\n          total: 0,\n          pending: 0,\n          resolved: 0,\n          rejected: 0\n        });\n      }\n\n      // Fetch recent reports\n      try {\n        const recentReportsRes = await axiosInstance.get(\"/api/reports/recent\");\n        if (Array.isArray(recentReportsRes.data)) {\n          setRecentReports(recentReportsRes.data.slice(0, 5));\n        }\n      } catch (reportError) {\n        console.error(\"Error fetching recent reports:\", reportError);\n        setRecentReports([]);\n      }\n      try {\n        const recentUsersRes = await axiosInstance.get(\"/api/admin/users/recent\");\n        recentUsersData = recentUsersRes.data;\n      } catch (userError) {}\n      try {\n        const recentPostsRes = await axiosInstance.get(\"/api/admin/posts/recent\");\n        recentPostsData = recentPostsRes.data;\n      } catch (postError) {}\n      setStats({\n        totalUsers: userStats.total,\n        totalPosts: postStats.total,\n        newUsersToday: userStats.newToday,\n        activeUsers: userStats.active,\n        todayPosts: postStats.todayTotal\n      });\n      setRecentUsers(recentUsersData);\n      setRecentPosts(recentPostsData);\n\n      // Fetch chart data with a more robust approach\n      try {\n        const userChartRes = await axiosInstance.get(\"/api/admin/stats/users/daily\");\n        if (userChartRes.data && Array.isArray(userChartRes.data) && userChartRes.data.length > 0) {\n          prepareUserChartData(userChartRes.data);\n        } else {\n          throw new Error(\"Invalid chart data format\");\n        }\n      } catch (chartError) {\n        console.error(\"Error fetching chart data:\", chartError);\n        generateSampleChartData(userStats.total);\n      }\n    } catch (error) {\n      setStats({\n        totalUsers: 25,\n        totalPosts: 128,\n        newUsersToday: 3,\n        activeUsers: 12,\n        todayPosts: 5\n      });\n      setRecentUsers([{\n        id: '1',\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'john@example.com',\n        createdAt: new Date().toISOString()\n      }, {\n        id: '2',\n        firstName: 'Jane',\n        lastName: 'Smith',\n        email: 'jane@example.com',\n        createdAt: new Date().toISOString()\n      }]);\n      setRecentPosts([{\n        id: '1',\n        title: 'First Post',\n        username: 'John Doe',\n        createdAt: new Date().toISOString()\n      }, {\n        id: '2',\n        title: 'Second Post',\n        username: 'Jane Smith',\n        createdAt: new Date().toISOString()\n      }]);\n      setReportStats({\n        total: 12,\n        pending: 3,\n        resolved: 8,\n        rejected: 1\n      });\n      setRecentReports([{\n        id: '1',\n        reason: 'Inappropriate content',\n        reporterName: 'John Doe',\n        status: 'PENDING',\n        createdAt: new Date().toISOString()\n      }, {\n        id: '2',\n        reason: 'Spam',\n        reporterName: 'Jane Smith',\n        status: 'RESOLVED',\n        createdAt: new Date().toISOString()\n      }]);\n      generateSampleChartData();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const prepareUserChartData = data => {\n    try {\n      // Ensure we have valid data to work with\n      if (!Array.isArray(data) || data.length === 0) {\n        generateSampleChartData();\n        return;\n      }\n\n      // Sort data by date\n      const sortedData = [...data].sort((a, b) => {\n        const dateA = new Date(a.date || a.createdAt || a.timestamp || 0);\n        const dateB = new Date(b.date || b.createdAt || b.timestamp || 0);\n        return dateA - dateB;\n      });\n\n      // Format labels and extract values, ensuring we have numbers\n      const labels = sortedData.map(item => {\n        const date = new Date(item.date || item.createdAt || item.timestamp || 0);\n        return date.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric'\n        });\n      });\n      const values = sortedData.map(item => {\n        const count = parseInt(item.count || item.newUsers || item.value || 0);\n        return isNaN(count) ? 0 : count;\n      });\n\n      // Calculate reasonable max value for chart scaling\n      const maxVal = Math.max(...values);\n      const maxValue = maxVal > 0 ? maxVal * 1.2 : 10;\n      setUserChartData({\n        labels,\n        values,\n        maxValue\n      });\n    } catch (error) {\n      console.error(\"Error processing chart data:\", error);\n      generateSampleChartData();\n    }\n  };\n  const generateSampleChartData = (totalUsers = 0) => {\n    const today = new Date();\n    const labels = [];\n    const values = [];\n\n    // Generate more realistic sample data based on total users\n    const baseValue = Math.max(1, totalUsers ? totalUsers / 20 : 5);\n    for (let i = 6; i >= 0; i--) {\n      const date = new Date();\n      date.setDate(today.getDate() - i);\n      labels.push(date.toLocaleDateString('en-US', {\n        month: 'short',\n        day: 'numeric'\n      }));\n\n      // Use a more realistic pattern for sample data with some randomness\n      const dayValue = Math.max(1, Math.floor(baseValue + Math.random() * (baseValue / 2)));\n      values.push(dayValue);\n    }\n    const maxValue = Math.max(...values) * 1.2;\n    setUserChartData({\n      labels,\n      values,\n      maxValue: maxValue || 10\n    });\n  };\n\n  // Rest of the code...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-green-100\",\n    children: [/*#__PURE__*/_jsxDEV(AdminSidebar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-sm sticky top-0 z-20\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between h-16\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-shrink-0 flex items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"text-xl font-bold text-gray-900\",\n                  children: \"SkillBridge Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-4 flex items-center md:ml-6\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sr-only\",\n                    children: \"View notifications\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"h-6 w-6\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pb-5 border-b border-gray-200 mb-5 flex items-center justify-between\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl\",\n              children: \"Dashboard Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n            data: userChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReportSummaries, {\n            stats: reportStats,\n            recentReports: recentReports\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"K3SX/m7CmVZbiZVYPXYQz6wyVJM=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Link","axiosInstance","Header","AdminSidebar","jsxDEV","_jsxDEV","AdminDashboard","_s","stats","setStats","totalUsers","totalPosts","newUsersToday","activeUsers","reportStats","setReportStats","total","pending","resolved","rejected","recentUsers","setRecentUsers","recentPosts","setRecentPosts","recentReports","setRecentReports","loading","setLoading","user","setUser","sidebarOpen","setSidebarOpen","userChartData","setUserChartData","labels","values","maxValue","isRefreshing","setIsRefreshing","navigate","chartRef","checkAdminAccess","userData","localStorage","getItem","JSON","parse","role","fetchDashboardData","error","console","userStats","newToday","active","postStats","todayTotal","recentUsersData","recentPostsData","usersRes","get","data","statsError","postsRes","todayPostsRes","count","undefined","Array","isArray","length","postError","allPostsRes","today","Date","setHours","todayPosts","filter","post","postDate","createdAt","err","reportStatsRes","reportError","recentReportsRes","slice","recentUsersRes","userError","recentPostsRes","userChartRes","prepareUserChartData","Error","chartError","generateSampleChartData","id","firstName","lastName","email","toISOString","title","username","reason","reporterName","status","sortedData","sort","a","b","dateA","date","timestamp","dateB","map","item","toLocaleDateString","month","day","parseInt","newUsers","value","isNaN","maxVal","Math","max","baseValue","i","setDate","getDate","push","dayValue","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ChartContainer","ReportSummaries","_c","$RefreshReg$"],"sources":["C:/Users/isuru/Documents/SLIIT/y3paf/skill-bridge/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axiosInstance from \"../utils/axios\";\nimport Header from \"../components/Header\";\nimport AdminSidebar from \"../components/AdminSidebar\";\n\nfunction AdminDashboard() {\n  const [stats, setStats] = useState({\n    totalUsers: 0,\n    totalPosts: 0,\n    newUsersToday: 0,\n    activeUsers: 0\n  });\n  const [reportStats, setReportStats] = useState({\n    total: 0,\n    pending: 0,\n    resolved: 0,\n    rejected: 0\n  });\n  const [recentUsers, setRecentUsers] = useState([]);\n  const [recentPosts, setRecentPosts] = useState([]);\n  const [recentReports, setRecentReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [userChartData, setUserChartData] = useState({\n    labels: [],\n    values: [],\n    maxValue: 10\n  });\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const navigate = useNavigate();\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const checkAdminAccess = async () => {\n      try {\n        const userData = localStorage.getItem(\"user\");\n        if (!userData) {\n          navigate(\"/login\");\n          return;\n        }\n\n        const user = JSON.parse(userData);\n        if (user.role !== \"ROLE_ADMIN\") {\n          navigate(\"/\");\n          return;\n        }\n        \n        setUser(user);\n        await fetchDashboardData();\n      } catch (error) {\n        console.error(\"Error checking admin access:\", error);\n        navigate(\"/\");\n      }\n    };\n\n    checkAdminAccess();\n  }, [navigate]);\n\n  const fetchDashboardData = async () => {\n    try {\n      let userStats = { total: 0, newToday: 0, active: 0 };\n      let postStats = { total: 0, todayTotal: 0 };\n      let recentUsersData = [];\n      let recentPostsData = [];\n      \n      // Fetch user stats\n      try {\n        const usersRes = await axiosInstance.get(\"/api/admin/stats/users\");\n        if (typeof usersRes.data === 'object') {\n          userStats = {\n            total: usersRes.data.total || 0,\n            newToday: usersRes.data.newToday || 0,\n            active: usersRes.data.active || 0\n          };\n        }\n      } catch (statsError) {\n        console.error(\"Error fetching user stats:\", statsError);\n        // Fallback logic remains unchanged\n      }\n\n      // Remaining stats fetching logic...\n      try {\n        const postsRes = await axiosInstance.get(\"/api/admin/stats/posts\");\n        if (typeof postsRes.data === 'object') {\n          postStats.total = postsRes.data.total || 0;\n        }\n        \n        const todayPostsRes = await axiosInstance.get(\"/api/admin/stats/posts/today\");\n        if (typeof todayPostsRes.data === 'object' && todayPostsRes.data.count !== undefined) {\n          postStats.todayTotal = todayPostsRes.data.count;\n        } else if (typeof todayPostsRes.data === 'number') {\n          postStats.todayTotal = todayPostsRes.data;\n        } else if (Array.isArray(todayPostsRes.data)) {\n          postStats.todayTotal = todayPostsRes.data.length;\n        }\n      } catch (postError) {\n        try {\n          const allPostsRes = await axiosInstance.get(\"/api/admin/posts\");\n          if (Array.isArray(allPostsRes.data)) {\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            \n            const todayPosts = allPostsRes.data.filter(post => {\n              const postDate = new Date(post.createdAt);\n              return postDate >= today;\n            });\n            \n            postStats.todayTotal = todayPosts.length;\n          }\n        } catch (err) {}\n      }\n      \n      // Fetch report stats\n      try {\n        const reportStatsRes = await axiosInstance.get(\"/api/reports/stats\");\n        if (typeof reportStatsRes.data === 'object') {\n          setReportStats({\n            total: reportStatsRes.data.total || 0,\n            pending: reportStatsRes.data.pending || 0,\n            resolved: reportStatsRes.data.resolved || 0,\n            rejected: reportStatsRes.data.rejected || 0\n          });\n        }\n      } catch (reportError) {\n        console.error(\"Error fetching report stats:\", reportError);\n        setReportStats({\n          total: 0,\n          pending: 0,\n          resolved: 0,\n          rejected: 0\n        });\n      }\n\n      // Fetch recent reports\n      try {\n        const recentReportsRes = await axiosInstance.get(\"/api/reports/recent\");\n        if (Array.isArray(recentReportsRes.data)) {\n          setRecentReports(recentReportsRes.data.slice(0, 5));\n        }\n      } catch (reportError) {\n        console.error(\"Error fetching recent reports:\", reportError);\n        setRecentReports([]);\n      }\n      \n      try {\n        const recentUsersRes = await axiosInstance.get(\"/api/admin/users/recent\");\n        recentUsersData = recentUsersRes.data;\n      } catch (userError) {}\n\n      try {\n        const recentPostsRes = await axiosInstance.get(\"/api/admin/posts/recent\");\n        recentPostsData = recentPostsRes.data;\n      } catch (postError) {}\n\n      setStats({\n        totalUsers: userStats.total,\n        totalPosts: postStats.total,\n        newUsersToday: userStats.newToday,\n        activeUsers: userStats.active,\n        todayPosts: postStats.todayTotal\n      });\n      \n      setRecentUsers(recentUsersData);\n      setRecentPosts(recentPostsData);\n\n      // Fetch chart data with a more robust approach\n      try {\n        const userChartRes = await axiosInstance.get(\"/api/admin/stats/users/daily\");\n        \n        if (userChartRes.data && Array.isArray(userChartRes.data) && userChartRes.data.length > 0) {\n          prepareUserChartData(userChartRes.data);\n        } else {\n          throw new Error(\"Invalid chart data format\");\n        }\n      } catch (chartError) {\n        console.error(\"Error fetching chart data:\", chartError);\n        generateSampleChartData(userStats.total);\n      }\n      \n    } catch (error) {\n      setStats({\n        totalUsers: 25,\n        totalPosts: 128,\n        newUsersToday: 3,\n        activeUsers: 12,\n        todayPosts: 5\n      });\n      \n      setRecentUsers([ \n        { id: '1', firstName: 'John', lastName: 'Doe', email: 'john@example.com', createdAt: new Date().toISOString() },\n        { id: '2', firstName: 'Jane', lastName: 'Smith', email: 'jane@example.com', createdAt: new Date().toISOString() }\n      ]);\n      \n      setRecentPosts([ \n        { id: '1', title: 'First Post', username: 'John Doe', createdAt: new Date().toISOString() },\n        { id: '2', title: 'Second Post', username: 'Jane Smith', createdAt: new Date().toISOString() }\n      ]);\n\n      setReportStats({\n        total: 12,\n        pending: 3,\n        resolved: 8,\n        rejected: 1\n      });\n      \n      setRecentReports([ \n        { id: '1', reason: 'Inappropriate content', reporterName: 'John Doe', status: 'PENDING', createdAt: new Date().toISOString() },\n        { id: '2', reason: 'Spam', reporterName: 'Jane Smith', status: 'RESOLVED', createdAt: new Date().toISOString() }\n      ]);\n\n      generateSampleChartData();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const prepareUserChartData = (data) => {\n    try {\n      // Ensure we have valid data to work with\n      if (!Array.isArray(data) || data.length === 0) {\n        generateSampleChartData();\n        return;\n      }\n\n      // Sort data by date\n      const sortedData = [...data].sort((a, b) => {\n        const dateA = new Date(a.date || a.createdAt || a.timestamp || 0);\n        const dateB = new Date(b.date || b.createdAt || b.timestamp || 0);\n        return dateA - dateB;\n      });\n      \n      // Format labels and extract values, ensuring we have numbers\n      const labels = sortedData.map(item => {\n        const date = new Date(item.date || item.createdAt || item.timestamp || 0);\n        return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n      });\n      \n      const values = sortedData.map(item => {\n        const count = parseInt(item.count || item.newUsers || item.value || 0);\n        return isNaN(count) ? 0 : count;\n      });\n      \n      // Calculate reasonable max value for chart scaling\n      const maxVal = Math.max(...values);\n      const maxValue = maxVal > 0 ? maxVal * 1.2 : 10;\n      \n      setUserChartData({\n        labels,\n        values,\n        maxValue\n      });\n    } catch (error) {\n      console.error(\"Error processing chart data:\", error);\n      generateSampleChartData();\n    }\n  };\n  \n  const generateSampleChartData = (totalUsers = 0) => {\n    const today = new Date();\n    const labels = [];\n    const values = [];\n    \n    // Generate more realistic sample data based on total users\n    const baseValue = Math.max(1, totalUsers ? totalUsers / 20 : 5);\n    \n    for (let i = 6; i >= 0; i--) {\n      const date = new Date();\n      date.setDate(today.getDate() - i);\n      labels.push(date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }));\n      \n      // Use a more realistic pattern for sample data with some randomness\n      const dayValue = Math.max(1, Math.floor(baseValue + Math.random() * (baseValue / 2)));\n      values.push(dayValue);\n    }\n    \n    const maxValue = Math.max(...values) * 1.2;\n    \n    setUserChartData({\n      labels,\n      values,\n      maxValue: maxValue || 10\n    });\n  };\n\n  // Rest of the code...\n  \n  return (\n    <div className=\"flex h-screen bg-green-100\">\n      {/* Replace the sidebar with AdminSidebar component */}\n      <AdminSidebar user={user} />\n      \n      {/* Main content */}\n      <div className=\"flex-1 overflow-auto\">\n        {/* Top navigation */}\n        <div className=\"bg-white shadow-sm sticky top-0 z-20\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex justify-between h-16\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                  <h1 className=\"text-xl font-bold text-gray-900\">SkillBridge Admin</h1>\n                </div>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"ml-4 flex items-center md:ml-6\">\n                  <button className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none\">\n                    <span className=\"sr-only\">View notifications</span>\n                    <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n                    </svg>\n                  </button>\n                  {/* User menu here */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"py-6\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            {/* Dashboard header */}\n            <div className=\"pb-5 border-b border-gray-200 mb-5 flex items-center justify-between\">\n              <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl\">Dashboard Overview</h2>\n            </div>\n            {/* Stats cards */}\n            <div className=\"mt-6 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\n              {/* Your cards here */}\n            </div>\n\n            {/* User Growth Chart */}\n            <ChartContainer data={userChartData} />\n\n            {/* Recent reports */}\n            <ReportSummaries stats={reportStats} recentReports={recentReports} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}